/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package voting_blockchain;

import java.awt.Image;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;


/**
 *
 * @author ELCOT
 */
public class vote_count extends javax.swing.JFrame {

    /**
     * Creates new form vote_count
     */
    public vote_count() {
        initComponents();
         populateJtable();
    }
     public void populateJtable(){
        MyQuery mq = new MyQuery();
        ArrayList<product2> list = mq.BindTable();
        String[] columnName = { "PARTY_NAME","PARTY_IMAGE","CONDITATE_NAME"};
        Object[][] rows = new Object[list.size()][3];
        for(int i=0;i<list.size();i++)
        {
            rows[i][0]= list.get(i).getpartyname();
            rows[i][2]= list.get(i).getconditate();
            
           if(list.get(i).getparty_image()!= null) 
           {
            
            ImageIcon image = new ImageIcon(new ImageIcon(list.get(i).getparty_image()).getImage().getScaledInstance(250,120, Image.SCALE_SMOOTH));
            rows[i][1]= image;
            }
            else
            {
                rows[i][1]=null;
            }
          
        }
        TheModel model = new TheModel (rows,columnName);
        jTable1.setModel(model);
        jTable1.setRowHeight(120);
        jTable1.getColumnModel().getColumn(1).setPreferredWidth(150);
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        text = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        text.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        text.setText("    0");
        text.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        jPanel1.add(text, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 0, 50, 50));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 80, 110, 50));

        jTable1.setBackground(new java.awt.Color(204, 0, 0));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.setRowHeight(80);
        jTable1.setSelectionBackground(new java.awt.Color(0, 0, 102));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 150, 950, 470));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/voting_blockchain/admin_backred.jpg"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1370, 740));

        setSize(new java.awt.Dimension(1370, 740));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
         int row = jTable1.rowAtPoint(evt.getPoint());
 int col=jTable1.columnAtPoint(evt.getPoint());

 {
     try{
          if(row==0 &&  col>=0)
          {
                String acno="root";
                String password="";
                String sql="SELECT COUNT(*) AS customerCount FROM First_party";
                String ur1="jdbc:mysql://localhost:3306/voting_blockchain";
                Connection connection=DriverManager.getConnection(ur1,acno,password);       
                Statement stmt=(Statement)connection.createStatement();
                ResultSet rs=stmt.executeQuery(sql);
                while(rs.next())
                {
                    int count = rs.getInt("customerCount");
                    text.setText(String.valueOf(count));
                }
     }
          else if(row==1 && col>=1)
          {
              String acno="root";
              String password="";
              String sql1="SELECT COUNT(*) AS customerCount FROM Second_party";
              String ur1="jdbc:mysql://localhost:3306/voting_blockchain";
              Connection connection1=DriverManager.getConnection(ur1,acno,password);
              Statement stmt1=(Statement)connection1.createStatement();
              ResultSet rs1=stmt1.executeQuery(sql1);
              while(rs1.next())
              {
                   int count = rs1.getInt("customerCount");
                    text.setText(String.valueOf(count));
              }
          }
          else if(row==2 && col>=2)
          {
               String acno="root";
              String password="";
              String sql2="SELECT COUNT(*) AS customerCount FROM Third_party";
              String ur1="jdbc:mysql://localhost:3306/voting_blockchain";
              Connection connection2=DriverManager.getConnection(ur1,acno,password);
              Statement stmt2=(Statement)connection2.createStatement();
              ResultSet rs2=stmt2.executeQuery(sql2);
              while(rs2.next())
              {
                
                  int count = rs2.getInt("customerCount");
                  text.setText(String.valueOf(count));
              }
          }
          else if(row==3 && col>=3)
          {
              String acno="root";
              String password="";
              String sql3="SELECT COUNT(*) AS customerCount FROM Fourth_party";
              String ur1="jdbc:mysql://localhost:3306/voting_blockchain";
              Connection connection3=DriverManager.getConnection(ur1,acno,password);
              Statement stmt3=(Statement)connection3.createStatement();
              ResultSet rs3=stmt3.executeQuery(sql3);
              while(rs3.next())
              {
                  int count = rs3.getInt("customerCount");
                  text.setText(String.valueOf(count));
              }
          }
          else if(row==4 && col>=4)
          {
              String acno="root";
              String password="";
              String sql4="SELECT COUNT(*) AS customerCount FROM Fifth_party";
              String url="jdbc:mysql://localhost:3306/voting_blockchain";
              Connection connection4=DriverManager.getConnection(url,acno,password);
              Statement stmt4=(Statement)connection4.createStatement();
              ResultSet rs4=stmt4.executeQuery(sql4);
              while(rs4.next())
              {
                   int count = rs4.getInt("customerCount");
                  text.setText(String.valueOf(count));
              }
          }
     }
      catch (SQLException ex) {
                Logger.getLogger(vote_count.class.getName()).log(Level.SEVERE, null, ex);
            }
 }

    }//GEN-LAST:event_jTable1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(vote_count.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new vote_count().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel text;
    // End of variables declaration//GEN-END:variables
}
